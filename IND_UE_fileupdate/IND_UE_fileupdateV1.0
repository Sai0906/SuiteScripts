"/*************************************************************\r\n * File Header\r\n * Script Type : UserEventScript\r\n * Script Name : IND_UE_fileupdate\r\n * File Name   : IND_UE_fileupdate.js\r\n * Description : \r\n * Created On  : \r\n * Modification Details:  \r\n ************************************************************/\r\n\r\n/**\r\n * @NApiVersion 2.x\r\n * @NScriptType UserEventScript\r\n */\r\ndefine(['N/task', 'N/log'], function (task, log) {\r\n\r\n    function afterSubmit(context) {\r\n        try {\r\n            if (context.type !== context.UserEventType.EDIT) {\r\n                return;\r\n              }\r\n              var fileRecord = context.newRecord;\r\n              log.debug({\r\n                title: 'fileRecord',\r\n                details: fileRecord\r\n              })\r\n              var fileName = fileRecord.getValue({ fieldId: 'name' });\r\n              var fileContents = fileRecord.getValue({ fieldId: 'content' });\r\n              log.debug({\r\n                title: 'fileContents',\r\n                details: fileContents\r\n              })\r\n\r\n          \r\n             /*  // Create a log file in the file cabinet\r\n              var newFile = file.create({\r\n                name: fileName + '_UpdateLog.txt',\r\n                fileType: file.Type.PLAINTEXT,\r\n                contents: 'File \"' + fileName + '\" was updated. Contents:\\n\\n' + fileContents,\r\n                folder: 12345 // Change to your specific File Cabinet folder ID\r\n              });\r\n          \r\n              var fileId = newFile.save();\r\n              log.audit('File Created', 'File ID: ' + fileId); */\r\n\r\n        } catch (e) {\r\n            log.error('Error in the afterSubmit function', e);\r\n        }\r\n    }\r\n\r\n    return {\r\n        afterSubmit: afterSubmit\r\n        //beforeLoad: afterSubmit\r\n    };\r\n});\r\n"